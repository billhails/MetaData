{#
 #  MetaData - API Generator.
 #  Copyright (C) 2022  Bill Hails
 #
 #  This program is free software: you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
 #  the Free Software Foundation, either version 3 of the License, or
 #  (at your option) any later version.
 #
 #  This program is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #  GNU General Public License for more details.
 #
 #  You should have received a copy of the GNU General Public License
 #  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #}

{# defines method names declared in the loader and called from the resolver #}
{% macro entity(entity) %}{{ entity.get_name() | camel_case | singular }}Loader{% endmacro %}
{% macro entities(entity) %}{{ entity.get_name() | camel_case }}Loader{% endmacro %}
{% macro count_entities(entity) %}count{{ entity.get_name() | mixed_case }}Loader{% endmacro %}
{% macro reference(reference) %}{{ reference.get_referenced().get_name() | camel_case | singular }}Loader{% endmacro %}
{% macro referrer(referrer) %}{{ referrer.get_entity().get_name() | camel_case }}By{{ referrer.get_name() | mixed_case }}Loader{% endmacro %}
{% macro count_referrer(referrer) %}count{{ referrer.get_entity().get_name() | mixed_case }}By{{ referrer.get_name() | mixed_case }}Loader{% endmacro %}
{% macro association_for_entity(entity, association) %}{{ association.get_name() | camel_case }}{% if not association.is_self_referential() %}{% if association.is_lhs(entity) %}Lhs{% else %}Rhs{% endif %}{% endif %}Loader{% endmacro %}
{% macro other_entity(entity, association) %}{{ association.get_other(entity).get_name() | camel_case | singular }}Loader{% endmacro %}
