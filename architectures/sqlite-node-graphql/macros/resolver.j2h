{#
 #  MetaData - API Generator.
 #  Copyright (C) 2022  Bill Hails
 #
 #  This program is free software: you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
 #  the Free Software Foundation, either version 3 of the License, or
 #  (at your option) any later version.
 #
 #  This program is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #  GNU General Public License for more details.
 #
 #  You should have received a copy of the GNU General Public License
 #  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #}
{# defines method names declared in the resolver and called from the schema #}
{% macro reference_for_entity(entity, reference) %}resolve{{ reference.get_name() | mixed_case }}For{{ entity.get_name() | singular | mixed_case }}{% endmacro %}
{% macro union_for_entity(entity, union) %}resolve{{ union.get_name() | mixed_case }}For{{ entity.get_name() | singular | mixed_case }}{% endmacro %}
{% macro referrer_for_entity(entity, referrer) %}resolve_{{ referrer.get_referrer_name() }}_for_{{ entity.get_name() | singular }}{% endmacro %}
{% macro association_for_entity(entity, association) %}resolve{{ association.get_name_for_other_entity(entity) | mixed_case }}For{{ entity.get_name() | singular | mixed_case }}Association{% endmacro %}
{% macro entity(entity) %}resolve{{ entity.get_name() | singular | mixed_case }}{% endmacro %}
{% macro entities(entity) %}resolve{{ entity.get_name() | mixed_case }}{% endmacro %}
{% macro create_entity(entity) %}resolveCreate{{ entity.get_name() | mixed_case }}{% endmacro %}
{% macro update_entity(entity) %}resolveUpdate{{ entity.get_name() | mixed_case }}{% endmacro %}
{% macro delete_entity(entity) %}resolveDelete{{ entity.get_name() | mixed_case }}{% endmacro %}
{% macro create_association(association) %}create{{ association.get_name() | mixed_case }}Association{% endmacro %}
{% macro delete_association(association) %}delete{{ association.get_name() | mixed_case }}Association{% endmacro %}
{% macro redact_field_for_entity(entity, field) %}redact{{ field.get_name() | mixed_case }}For{{ entity.get_name() | mixed_case }}{% endmacro %}