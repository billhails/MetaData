{#-
 #  MetaData - API Generator.
 #  Copyright (C) 2022-2023  Bill Hails
 #
 #  This program is free software: you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
 #  the Free Software Foundation, either version 3 of the License, or
 #  (at your option) any later version.
 #
 #  This program is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #  GNU General Public License for more details.
 #
 #  You should have received a copy of the GNU General Public License
 #  along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#}
// {{ warning }}

// generates a dot file for GraphViz, diagramming the schema

digraph {{ schema.get_name() }} {
    rankdir=LR
    node [shape=record]
{%- for entity in schema.get_entities() %}
    struct_{{ entity.get_name() }} [label="<field_{{ entity.get_name() }}> {{ entity.get_name() }}
    {%- for field in entity.get_fields() -%}
        |{{ field.get_name() }}
    {%- endfor -%}
    {%- for enum in entity.get_enums() -%}
        |{{ enum.get_name() }}
    {%- endfor -%}
    {%- for reference in entity.get_references() -%}
        |<reference_{{ reference.get_name() }}> {{ reference.get_name() }}
    {%- endfor -%}
    {%- for union in entity.get_unions() -%}
        |<union_{{ union.get_name() }}> {{ union.get_name() }}
    {%- endfor -%}
    "]
{%- endfor %}
{%- for entity in schema.get_entities() %}
    {%- for reference in entity.get_references() %}
    struct_{{ entity.get_name() }}:reference_{{ reference.get_name() }} -> struct_{{ reference.get_referenced().get_name() }}:field_{{ reference.get_referenced().get_name() }}
    {%- endfor %}

    {%- for union in entity.get_unions() %}
        {%- for reference in union.get_references() %}
    struct_{{ entity.get_name() }}:union_{{ union.get_name() }} -> struct_{{ reference.get_referenced().get_name() }}:field_{{ reference.get_referenced().get_name() }} [color="green"]
        {%- endfor %}
    {%- endfor %}
{%- endfor %}
{%- for association in schema.get_associations() %}
    struct_{{ association.get_lhs().get_name() }}:field_{{ association.get_lhs().get_name() }} -> struct_{{ association.get_rhs().get_name() }}:field_{{ association.get_rhs().get_name() }}
     {{- ' ' }} [dir="both",color="blue",label="{{ association.get_name() }}",fontcolor="blue"]
{%- endfor %}
}