{#
 #  MetaData - API Generator.
 #  Copyright (C) 2022  Bill Hails
 #
 #  This program is free software: you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
 #  the Free Software Foundation, either version 3 of the License, or
 #  (at your option) any later version.
 #
 #  This program is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #  GNU General Public License for more details.
 #
 #  You should have received a copy of the GNU General Public License
 #  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #}
// {{ warning }}

const { v4: uuidv4 } = require('uuid');
const logger = require('../../Utils/logger');
const util = require('util');

{% import 'macros/gql.j2h' as gql %}
{% import 'macros/database.j2h' as database %}
{% import 'macros/model.j2h' as model %}

class {{ model.name(entity) }} {
    constructor(args) {
        logger.debug('new Model.{{ model.name(entity) }}', {args});
        this.id = args.id || uuidv4();
{% for field in entity.get_fields() %}
        this.{{ gql.field_label(field) }} = args.{{ gql.field_label(field) }};
{% endfor %}
{% for reference in entity.get_references() %}
    this.{{ gql.field_label(reference) }} = args.{{ gql.field_label(reference) }};
{% endfor %}
{% for union in entity.get_unions() %}
        if (args.{{ gql.field_label(union) }}) {
            if (typeof args.{{ database.name(union) }} == "string") {
                this.{{ gql.field_label(union) }} = args.{{ gql.field_label(union) }};
                this.{{ gql.field_type(union) }} = args.{{ gql.field_type(union) }};
            } else {
                this.{{ gql.field_label(union) }} = args.{{ gql.field_label(union) }}.id;
                this.{{ gql.field_type(union) }} = args.{{ gql.field_type(union) }}.type;
            }
        }
{% endfor %}
    }

    toJSON() {
        return {
            id: this.id,
{%- for field in entity.get_fields() %}
{%-     if not field.is_auth_role('password') %}
            {{ gql.field_label(field) }}: this.{{ gql.field_label(field) }},
{%-     endif %}
{%- endfor %}
{%- for reference in entity.get_references() %}
            {{ gql.field_label(reference) }}: this.{{ gql.field_label(reference) }},
{%- endfor %}
{%- for union in entity.get_unions() %}
            {{ gql.field_label(union) }}: this.{{ gql.field_label(union) }},
            {{ gql.field_type(union) }}: this.{{ gql.field_type(union) }},
{%- endfor %}
        };
    }
}

module.exports = {{ model.name(entity) }};