{#
 #  MetaData - API Generator.
 #  Copyright (C) 2022-2023  Bill Hails
 #
 #  This program is free software: you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
 #  the Free Software Foundation, either version 3 of the License, or
 #  (at your option) any later version.
 #
 #  This program is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #  GNU General Public License for more details.
 #
 #  You should have received a copy of the GNU General Public License
 #  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 -#}
 // {{ warning }}
require('dotenv').config();

/*
 * This script runs the auth server
 */

// must happen before express, apparently
const setupTracing = require('./OpenTelemetry/base');
setupTracing('{{ schema.get_name() }}-auth');

const express = require('express');
const AuthServer = require('./Auth/server');
const AuthDatabaseAccess = require('./Auth/dbaccess');
const Data = require('./DB/data');
const { parseArgs } = require('node:util');

const cliOptions = {
    port: {
        type: 'string',
        short: 'p',
    }
};

const { values } = parseArgs({ options: cliOptions });
const port = parseInt(values.port || process.env.AUTH_PORT);

const app = express();
app.use(express.json());

(async () => {
    const server = new AuthServer(new AuthDatabaseAccess(await Data.build()));
    app.post('/signup', async (req, res) => server.signUp(req, res));
    app.post('/refresh', async (req, res) => server.refreshAccessToken(req, res));
    app.post('/logout', async (req, res) => server.deleteRefreshToken(req, res));
    app.post('/login', async (req, res) => server.login(req, res));
    app.listen(port);
    console.log(`Running auth server at http://localhost:${port}/{signup,refresh,login,logout}`);
})();
