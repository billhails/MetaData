{#
 #  MetaData - API Generator.
 #  Copyright (C) 2022  Bill Hails
 #
 #  This program is free software: you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
 #  the Free Software Foundation, either version 3 of the License, or
 #  (at your option) any later version.
 #
 #  This program is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #  GNU General Public License for more details.
 #
 #  You should have received a copy of the GNU General Public License
 #  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #}
// {{ warning }}
{%- if schema.is_auth_enabled() %}

const axios = require('axios');
const authPort = 3000;
const authRoot = `http://localhost:${authPort}`;
const jwt = require('jsonwebtoken');

async function post(url, body) {
    return axios.post(`${authRoot}/${url}`, body, { validateStatus: () => true });
}

async function signup(user) {
    return post('signup', user);
}

async function login(user) {
    return post('login', user);
}

async function refresh(refreshToken) {
    return post('refresh', { refreshToken });
}

async function logout(refreshToken) {
    return post('logout', { refreshToken });
}

function deconstruct(response) {
    const accessToken = response.data.accessToken;
    const tokenContent = jwt.decode(accessToken);
    const id = tokenContent.sub;
    const refreshToken = response.data.refreshToken;
    return { id, accessToken, refreshToken };
}

module.exports = {
    signup,
    login,
    refresh,
    logout,
    deconstruct
};

{% else %}
// schema.auth-enabled is false, only stub code generated
module.exports = {};
{% endif %}