{#
 #  MetaData - API Generator.
 #  Copyright (C) 2022  Bill Hails
 #
 #  This program is free software: you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
 #  the Free Software Foundation, either version 3 of the License, or
 #  (at your option) any later version.
 #
 #  This program is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #  GNU General Public License for more details.
 #
 #  You should have received a copy of the GNU General Public License
 #  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #}
// {{ warning }}
{%- if schema.is_auth_enabled() %}

const sqlite3 = require('sqlite3').verbose();
const { open: openSqlite } = require('sqlite');

const getDb = (() => {
    let db;
    return () => {
        if (!db) {
            db = openSqlite({ // N.B. no await!
                filename: './{{ schema.get_name() }}.db',
                driver: sqlite3.Database
            });
        }
        return db;
    }
})();

async function refreshTokenExists(token) {
    const db = await getDb();
    const row = await db.get(`
        SELECT count(*) AS c
          FROM refresh_tokens
         WHERE token = ?
        `,
        [token]
    );
    return(parseInt(row.c) == 1);
}

module.exports = {
    getDb,
    refreshTokenExists
};

{% else %}
// schema.auth-enabled is false, no code generated
module.exports = {};
{% endif %}